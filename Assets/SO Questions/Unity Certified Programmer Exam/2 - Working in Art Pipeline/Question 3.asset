%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 3
  m_EditorClassIdentifier: 
  question: 'Textures in a game appear blurry when viewed at extreme angles, such
    as when a player stands close to a wall and looks down the length of the wall.
    The game is targeting a wide range of hardware. It is decided to allow the texture
    appearance to scale with hardware performance.


    What code should a Programmer
    execute to reduce the blurry texture issue when running on the best hardware?'
  wrongAnswer1: Texture.mipMapBias = -0.5f;
  wrongAnswer2: Texture.wrapMode = TextureWrapMode.Clamp;
  wrongAnswer3: Texture.filterMode = FilterMode.Trilinear;
  correctAnswer: Texture.anisoLevel = 9;
  showAnswer: 'The Programmer should use the following:


    Texture.anisoLevel
    = 9;


    This is an issue with anisotropic filtering of textures. As a player
    gets near a surface and looks along it, the texture is stretched more near the
    player than it is far away. This causes artifacts without anisotropic filtering.
    Setting the anisoLevel to 9 is the highest it can be set and will most likely
    reduce the issue.


    The Programmer should not use the following:


    Texture.filterMode
    = FilterMode.Trilinear;


    This controls how individual pixels are interpolated
    when displayed at a higher pixel density on screen than the texture has. This
    may make textures look better in the game, but it does not address the specific
    issue of texture quality when viewed from an extreme angle.


    The Programmer
    should not use the following:


    Texture.mipMapBias = -0.5f;


    This controls
    the sharpness of textures using mip maps. While mip maps are a great way to improve
    performance of a game, mip maps do not contribute to the issue. A mip map is
    used when an object is far away and requires a smaller texture than up close.


    The
    Programmer should not use the following:


    Texture.wrapMode = TextureWrapMode.Clamp;


    This
    controls how a texture is applied to UV coordinates less than 0 or greater than
    1. Clamp will prevent a texture from repeating beyond the 0 to 1 range and can
    prevent blurry edges to textures from repeating bleedover. However, this is not
    causing the issue of extreme angles producing blurry textures.'
