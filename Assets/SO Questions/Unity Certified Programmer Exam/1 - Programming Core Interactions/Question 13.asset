%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 13
  m_EditorClassIdentifier: 
  question: "A Programmer is working on a first-person shooter game for PC and must
    implement a custom input controller to detect the keyboard keys used. The player
    must be able to move forward, backward, rotate left and rotate right by holding
    down the arrow keys. The player must be able to shoot only one bullet at a time
    by pressing the spacebar key. \r\n\r\nThe Programmer wants to detect the inputs
    from the keyboard inside the Update() method.\r\n\r\nWhich should the Programmer
    do?"
  wrongAnswer1: 'Detect both the arrow keys for movement and the spacebar for shooting
    by using the Input.GetKeyDown method.


    Detect both the arrow keys for movement
    and the spacebar for shooting by using the Input.GetKey method.'
  wrongAnswer2: 'Detect the arrow keys for movement using the Input.GetAxisRaw method
    and the spacebar for shooting by using the Input.GetButton method.


    Detect
    the arrow keys for movement using the Input.GetAxisRaw method and the spacebar
    for shooting by using the Input.GetKeyDown method.'
  wrongAnswer3: 'Detect both the arrow keys for movement and the spacebar for shooting
    by using the Input.GetKey method.


    Detect the arrow keys for movement using
    the Input.GetKey method and the spacebar for shooting by using the Input.GetKeyDown
    method.'
  correctAnswer: 'Detect the arrow keys for movement using the Input.GetKey method
    and the spacebar for shooting by using the Input.GetKeyDown method.


    Detect
    the arrow keys for movement using the Input.GetAxisRaw method and the spacebar
    for shooting by using the Input.GetKeyDown method.'
  showAnswer: 'The Programmer should detect the arrow keys for movement using the
    Input.GetKey method and the spacebar for shooting by using the Input.GetKeyDown
    method. By using the Input.GetKey for the movement, for every frame that the
    player holds any of the arrow keys, the method will return true. For shooting,
    the GetKeyDown will return true only when the player first presses the spacebar
    key, and false until the player releases it and press it down again, which ensures
    that only one bullet is shot per spacebar pressed.


    The Programmer could
    also detect the arrow keys for movement using the Input.GetAxisRaw method and
    the spacebar for shooting by using the Input.GetKeyDown method. The standard
    Input.GetAxisRaw("Horizontal") will output -1, 0 or +1 depending on the state
    of the left and right arrows pressed, while Input.GetAxisRaw("Vertical") will
    do the same for the up and down arrows. These values can then be easily converted
    into the player movement and rotation. For the shooting, the GetKeyDown will
    return true only when the player first presses the spacebar key, and false until
    the player releases it and press it down again, which ensures only one bullet
    shoot per spacebar pressed.


    The Programmer should not detect both the arrow
    keys for movement and the spacebar for shooting by using the Input.GetKeyDown
    method. This will prevent the player from holding down the arrow keys for continuous
    movement. The player will have to press and release each arrow key multiple times
    in order to keep moving.


    The Programmer should not detect both the arrow
    keys for movement and the spacebar for shooting by using the Input.GetKey method.
    This will cause the player to shoot multiple bullets every time the player presses
    the spacebar, since the method will return true for every frame the key is held
    down.


    The Programmer should not detect the arrow keys for movement using
    the Input.GetAxisRaw method and the spacebar for shooting by using the Input.GetButton
    method. The problem is that the Input.GetButton method works similarly to the
    Input.GetKey method. This will cause the player to shoot multiple bullets every
    time the player presses the spacebar, since the method will return true for every
    frame the key is held down.'
