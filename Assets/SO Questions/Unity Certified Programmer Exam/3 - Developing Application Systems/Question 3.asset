%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 3
  m_EditorClassIdentifier: 
  question: "The following script class exists for a Canvas game object:\r\n\r\npublic
    class CanvasScript : MonoBehaviour\r\n{\r\n   void Quit()\r\n   {\r\n       
    Debug.Log(\"Quit\");\r\n   }\r\n}\r\n\r\nA Programmer drags the Canvas object
    to the On Click event for a Button game object. When the Programmer searches
    for the Quit function, it does not appear.\r\n\r\nThe Programmer needs to wire
    the Quit method to the Button game object's On Click event.\r\n\r\nWhat should
    the Programmer do?"
  wrongAnswer1: Change the name of the Quit method to OnApplicationQuit.
  wrongAnswer2: Modify the Quit method to accept a GameObject instance as a parameter.
  wrongAnswer3: Change the CanvasScript class name to Canvas.
  correctAnswer: Add the public access modifier to the Quit method.
  showAnswer: 'The Programmer should add the public access modifier to the Quit method.
    Only public methods show up as functions for the On Click event.

    

    The
    Programmer should not modify the Quit method to accept a GameObject instance
    as a parameter. The problem is that the method is not public.

    

    The
    Programmer should not change the name of the Quit method to OnApplicationQuit.
    The OnApplicationQuit method is called by Unity after you call Application.Quit.
    The problem in this scenario is that the Quit method is not public.

    

    The
    Programmer should not change the CanvasScript class name to Canvas. The name
    of the script class has no effect on methods that are exposed as functions.'
