%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 15
  m_EditorClassIdentifier: 
  question: 'The Programmer is developing a standalone mobile game and needs to be
    able to load high-quality local textures dynamically and keep the overall memory
    usage to a minimum.

    

    What is the appropriate way to load the files?'
  wrongAnswer1: Load textures with WWW.texture.
  wrongAnswer2: Load textures from Resources folder.
  wrongAnswer3: Load textures with AssetBundles from a server.
  correctAnswer: Load textures from streaming assets.
  showAnswer: 'You should load textures from streaming assets because this is the
    most efficient way to stream high-quality textures dynamically from local storage.
    Without StreamingAssets, these textures would typically be included in the project
    build. Loading a large number of high-resolution textures at the beginning of
    a scene results in a high usage of memory.

    

    You should not load textures
    with AssetBundles from a server. AssetBundles hosted on a server must be downloaded
    by the application before they can be accessed. This results in increased load
    time. Additionally, hosting the textures on a server is not a design requirement
    in this case.

    

    You should not load textures from the Resources folder.
    Streaming Assets and AssetBundles offer better memory management than loading
    from the Resources folder.

    

    You should not load textures with WWW.texture.
    Because high-resolution textures hosted on a server take a long time to download,
    this method results in increased load time and reduced performance. Additionally,
    hosting the textures on a server is not a design requirement in this case.'
