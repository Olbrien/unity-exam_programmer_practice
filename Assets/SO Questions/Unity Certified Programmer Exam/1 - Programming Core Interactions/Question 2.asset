%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 2
  m_EditorClassIdentifier: 
  question: 'A Programmer must implement a UI menu system. Each menu consists of
    a UI Panel and one or more UI Buttons, all of which are parented under a UI Canvas
    object. The entire UI menu system will be created in a separate scene that is
    loaded additively.


    The art style for the panels and buttons should be consistent
    (color, texture, button transition type, etc.), but the Art Director has not
    locked these decisions down yet. She wants to work on these settings concurrently
    with the Programmer''s UI work. Her changes would take effect on all new and
    existing objects in the scene.


    How can the Programmer create the functional
    menu system and allow the Art Director to work concurrently on the look and feel?'
  wrongAnswer1: Create new button and panel materials, and assign them to all buttons
    and panels in the scene.
  wrongAnswer2: "Write a script to search/reaplce values in the scene file based
    on the Art Director's input.\t"
  wrongAnswer3: Create subclasses for UI.Button and UI.Panel, and set the look and
    feel values programmatically.
  correctAnswer: Use prefabs for the button and panel, and have the Art Director
    modify the prefabs.
  showAnswer: "To work concurrently with the Art Director, you should use prefabs
    for the buttons and panel, and have the Art Director modify the prefabs. Prefabs
    are assets that live in the project. Because the code only references them, changes
    made by the Art Director are reflected in all parts of the game that use that
    asset as reference.\n\nTo work concurrently with the Art Director, you should
    not create subclasses for the UI.Button and UI.Panel or set the look and feel
    values programmatically. This would require you to update the code every time
    the Art Director makes any changes. \n\nTo work concurrently with the Art Director,
    you should not create new button and panel materials, or assign them to all buttons
    and panels in the scene. This would make all buttons and panels look the same.\n\nTo
    work concurrently with the Art Director, you should not write a script to search/replace
    values in the scene file based on the Art Director's input. The scene file is
    not easy to manipulate and this could set the scene to a corrupted state."
