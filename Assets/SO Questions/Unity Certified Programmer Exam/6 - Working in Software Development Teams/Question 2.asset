%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 2
  m_EditorClassIdentifier: 
  question: 'A Programmer is tasked with setting up version control for a new project.
    Automatically generated files should be ignored.

    

    Which two folders
    in the Unity directory structure should be tracked under version control? '
  wrongAnswer1: ProjectSettings and Library.
  wrongAnswer2: Library and Assets.
  wrongAnswer3: Temp and obj.
  correctAnswer: Assets and ProjectSettings.
  showAnswer: 'You should track the Assets folder under version control. This folder
    contains the actual assets (such as 3D models, materials, and scripts) for the
    project and is the most important folder to keep for version control.

    

    You
    should also track the ProjectSettings folder under version control. This folder
    contains setting files for project settings such as Tags, Editor, Physics, and
    more. If this folder were ignored, there would be no consistent project settings
    among the team.

    

    You should not track the Library folder under version
    control. This folder contains cached data of each asset that lets Unity know
    how to use them. This data is generated automatically and should not be shared.
    The Library is usually the largest folder in the project, which is another reason
    not to track it under version control.

    

    You should not track the
    obj folder under version control. This automatically generated folder contains
    temporary files that are generated from compiling code (used by MonoDevelop).

    

    You
    should not track the Temp folder under version control. This folder contains
    temporary files that are automatically generated by Unity.'
