%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 3
  m_EditorClassIdentifier: 
  question: 'A Programmer is creating an application that simulates a space battle.
    Every ship is controlled by an AI. The scene contains several large high-polygon
    spaceships that have Mesh Colliders attached. Each ship will continuously do
    multiple raycasts in Update() for the AI to perform informed decision making.


    The
    Programmer uses the following:


    Physics.Raycast(ray, out hit, 50f);


    The
    other objects in the scene are spheres: a planet, an asteroid belt, and three
    moons that orbit the planet. The ships can collide with these objects, and their
    trajectory is altered by gravity if they get within 50 meters.


    How should
    the Programmer optimize the performance of the raycasts?'
  wrongAnswer1: Decrease the Fixed Timestep in TimeManager.
  wrongAnswer2: Increase the length of the raycast.
  wrongAnswer3: Place the environment and the ships in separate layers, and only
    do raycasts against ships.
  correctAnswer: Replace the Mesh Collider on the spaceships with a primitive collider.
  showAnswer: 'You should replace the Mesh Collider on the spaceships with a primitive
    collider to optimize raycast performance. Because the Mesh Collider is the most
    expensive collider in terms of performance, it should be used sparingly. The
    primitive Sphere Collider is appropriate for round or nearly round objects such
    as planets or asteroids.


    You should not increase the length of the raycast
    to optimize its performance. The raycast length only dictates the maximum distance
    the raycast checks for collisions. It does not affect the raycast''s performance.


    You
    should not place the environment and the ships in separate layers and only do
    the raycast against ships. Because the raycast only hits objects in the layer
    in which it casted, you will not be able to detect planets or asteroids.


    You
    should not decrease the fixed time step in the Time manager to optimize raycast
    performance. The performance cost of the raycast is not affected by the Fixed
    Time Step value. Also, decreasing the fixed time step increases the number of
    times physics-related calculations are run, which has a negative effect on performance.'
