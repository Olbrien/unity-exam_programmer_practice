%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 5
  m_EditorClassIdentifier: 
  question: 'In a tower defense game, the Kinetic Turret deals massive damage in
    exchange for being inaccurate. It works best when enemies are walking in a straight
    line because it fires at a spot where the enemy will be if it keeps the same
    speed and direction. If an enemy is slowed down or turns a corner, the shot may
    miss.

    

    Each Kinetic Turret uses the TurretKinetic class. TurretKinetic
    caches the Transform of the enemy within range that has progressed the furthest
    along the path using the method GetTargetEnemy(). If an enemy leaves the Kinetic
    Turret''s range before it can shoot, a new enemy Transform is cached using GetTargetEnemy().
    The world-space position of the Kinetic Turret''s target spot is calculated and
    returned using the GetTargetSpot() method and is called only from within the
    FireShot() method.

    

    There is an issue with the Kinetic Turret firing
    at spots that have no hope of hitting an enemy, even if the enemy is traveling
    along a perfectly straight path and at a constant speed. The spot the Kinetic
    Turret fires at does not appear consistent in relationship to the enemy, and
    it is difficult to predict where it will fire next.

    

    What should
    the Programmer do to help debug the issue?'
  wrongAnswer1: Add Debug.Log() to the FireShot() method to report the result of
    GetTargetSpot().
  wrongAnswer2: Set the Inspector into Debug Mode to expose private variables.
  wrongAnswer3: Insert Logger.Log() into the GetTargetSpot() method to log the results
    before returning.
  correctAnswer: Use the OnDrawGizmosSelected() method in TurretKinetic.
  showAnswer: 'The Programmer should add the OnDrawGizmosSelected() method to TurretKinetic
    to help debug where the turret is aiming. By using the cached Transform of the
    enemy and calling GetTargetSpot() from within OnDrawGizmosSelected(), the Programmer
    could use Gizmos.DrawLine to continuously draw a line from the target to the
    targeting spot, even when the turret is not ready to fire. While selected, the
    turret will give many more points of data for the Programmer to establish a pattern,
    and iterations on the code will be displayed.

    

    The Programmer should
    not put the Inspector into Debug Mode. The targeting spot is not cached and thus
    will not be exposed as a private variable. The Programmer could cache it but
    would then have to continuously compare the position of the enemy to the variable.
    This would be tedious and unintuitive to examine.

    

    The Programmer
    should not use Debug.Log() or Logger.Log(). These would only provide the targeting
    spot when the turret fires, which is already known. These methods would print
    the exact coordinates to the Console but would fail to establish a pattern due
    to a lack of new information.'
