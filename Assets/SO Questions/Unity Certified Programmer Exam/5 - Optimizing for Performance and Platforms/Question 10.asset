%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 10
  m_EditorClassIdentifier: 
  question: 'A mobile app is under development that makes use of Render Textures
    and Image Effects to allow the user to manipulate images from within the app
    to mock-up designs and ideas. The app is targeting multiple platforms including
    ones that use Direct3D, OpenGL, and Metal. For this reason, the methods by which
    multiple Render Textures are applied to an Image Effect differ in their vertical
    texture coordinates. The project has a growing library of effects and tools related
    to manipulating Render Textures that is expected to continue to grow after launch.

    

    What
    course of action should the Programmer take to ensure efficient development across
    multiple build targets?'
  wrongAnswer1: Set the .wrapModeV of all Render Textures at runtime to TextureWrapMode.Mirror
    based upon an evaluation done on UV coordinates in an Awake() method.
  wrongAnswer2: Add the [ImageEffectAfterScale] Attribute to all Image Effects, and
    apply a vertical scale to the Camera based upon a bool set before building a
    project per platform.
  wrongAnswer3: Clone the project, and in each project make the necessary changes
    to the scripts that work with Render Textures and Image Effects to support a
    target platform.
  correctAnswer: Use Platform Dependent Compilation to define portions of scripts
    that work with Render Textures and Image Effects to work differently per platform.
  showAnswer: 'The Programmer should use Platform Dependent Compilation. This will
    allow them to specify portions of relevant scripts to behave differently depending
    on which platform they are built for. In particular, #if UNITY_UV_STARTS_AT_TOP
    would be helpful, or #if UNITY_IOS, or #if UNITY_ANDROID if other platform-specific
    functionality is required. This will allow the least amount of redundant coding
    and maintenance during updates.

    

    The Programmer should not clone
    the project for each target platform. This will incur a high cost to maintain
    code changes across projects. Any change or bug fix in one project must be repeated
    in all others.

    

    The Programmer should not set the .wrapModeV of all
    Render Textures to TextureWrapMode.Mirror. This controls how V values beyond
    0 and 1 are mapped when using UVs. It will not allow Render Textures to be flipped
    without causing bleed issues and substantial setup.

    

    The Programmer
    should not add the [ImageEffectAfterScale] Attribute to all Image Effects. This
    controls how the Image Effect is applied with regards to dynamic resolution.
    It will not flip Render Textures depending on platform specifications.'
