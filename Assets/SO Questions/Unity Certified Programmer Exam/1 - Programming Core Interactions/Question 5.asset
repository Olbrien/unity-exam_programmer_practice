%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 5
  m_EditorClassIdentifier: 
  question: "A Programmer is creating a simulation of a plane taking off from a landing
    strip. The code for the plane is shown below (line numbers are included for reference
    only):\r\n\r\n01 public class Plane : MonoBehaviour\r\n02 {\r\n03   public Rigidbody
    rb;\r\n04     public float forwardForce = 2000f;\r\n05     public float liftForce
    = 100f;\r\n06\r\n07     void FixedUpdate()\r\n08    {\r\n09       \r\n10    }\r\n11
    }\r\n\r\nThe landing strip is parallel to the Z axis. The Y axis is perpendicular
    to the landing strip. The forwardForce field specifies the force of the plane
    rolling down the landing strip. The liftForce field specifies the force used
    to lift the plane from the landing strip.\r\n\r\nThe Programmer needs to add
    code at line 09 so that the plane can perform its takeoff.\r\n\r\nWhich code
    segment should the Programmer use?"
  wrongAnswer1: rb.AddForce(0, liftForce, forwardForce);
  wrongAnswer2: rb.AddForce(Time.deltaTime, forwardForce, liftForce);
  wrongAnswer3: rb.AddForce(liftForce, forwardForce, Time.deltaTime);
  correctAnswer: rb.AddForce(0, liftForce * Time.deltaTime, forwardForce * Time.deltaTime);
  showAnswer: 'The Programmer should use the following code:


    rb.AddForce(0,
    liftForce * Time.deltaTime, forwardForce * Time.deltaTime);


    The AddForce
    method of the RigidBody class adds force in three directions. The three parameters
    to the method represent the X-axis force, Y-axis force, and Z-axis force, respectively.
    In this scenario, the Z axis is parallel to the landing strip. That is the direction
    that the plane travels in a forward motion. The Y axis is perpendicular to the
    landing strip. That is the direction that the plane rises in the air. The plane
    should not move on the X axis at all. You must multiply the forces by Time.deltaTime
    because the frame rate can be different on each computer.

    

    The Programmer
    should not use the following code:

    

    rb.AddForce(0, liftForce, forwardForce);

    

    This
    code does not take into consideration the frame rate.

    

    The Programmer
    should not use the following code:

    

    rb.AddForce(liftForce, forwardForce,
    Time.deltaTime);

    

    This code adds a force to the X axis. The plane
    should not move on the X axis. The Y force does not take into consideration the
    frame rate. The Z force uses a value that is the time since the last frame update.

    

    The
    Programmer should not use the following code:

    

    rb.AddForce(Time.deltaTime,
    forwardForce, liftForce);

    

    This code adds a force to the X axis.
    The plane should not move on the X axis. The Y and Z forces do not take into
    consideration the frame rate.'
