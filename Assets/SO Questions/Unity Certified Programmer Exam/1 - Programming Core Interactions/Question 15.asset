%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 15
  m_EditorClassIdentifier: 
  question: 'The Game Design Document (GDD) requires you to create a smooth camera
    transition from an over-the-shoulder view to a top-down view when the player
    performs certain actions. The player''s character should be visible throughout
    this transition. The camera should ease in and out of the motion, and the camera
    should never overshoot the target position.


    What function should the Programmer
    use to meet these requirements?'
  wrongAnswer1: Vector3.MoveTowards()
  wrongAnswer2: Vector3.Lerp()
  wrongAnswer3: Vector3.Slerp()
  correctAnswer: Vector3.SmoothDamp()
  showAnswer: 'You should use Vector3.SmoothDamp() to meet these requirements. SmothDamp
    provides the ease in and ease out features in addition to preventing the overshot
    of the target position.


    You should not use Vector3.Slerp() to meet these
    requirements. The Slerp method, which stands for spherical linear interpolation,
    is used to interpolate between two directional vectors without any ease effect
    unless it is implemented manually.


    You should not use Vector3.MoveTowards()
    to meet these requirements. The MoveTowards method is used to move a point toward
    a target by a fixed amount. It does not provide any ease effect.


    You should
    not use Vector3.lerp() to meet these requirements. The lerp method, which stands
    for linear interpolation, is used to interpolate between two positional vectors
    without any ease effect unless it is implemented manually.'
