%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 6
  m_EditorClassIdentifier: 
  question: "A Programmer must create a script that performs unit tests on an Enemy
    Spawner controller game object. Each test must spawn several enemies and check
    for specific characteristics in the spawned enemy. \r\n\r\nThe tested scene must
    be clean after each test.\r\n\r\nWhich method should the Programmer create?"
  wrongAnswer1: In the Enemy Spawner controller script, implement the OnDisable method
    to destroy all enemies created.
  wrongAnswer2: In the Enemy Spawner controller script, implement the OnDestroy method
    to destroy all enemies created.
  wrongAnswer3: In the unit tests script, implement a method that destroys all enemies
    created and mark it with the attribute [SetUp].
  correctAnswer: In the unit tests script, implement a method that destroys all enemies
    created and mark it with the attribute [TearDown].
  showAnswer: 'In the unit tests script, the Programmer should implement a method
    to destroy all enemies that were created and mark it with the attribute [TearDown]
    to restore the tested scene to a clean state. The method marked with the [TearDown]
    attribute in the unit tests script will be executed after each test is run. This
    will ensure that all created enemies are destroyed after each test has executed.

    

    In
    the Enemy Spawner controller script, the Programmer should not implement the
    OnDisable method to destroy all enemies that were created. The OnDisable method
    will only be called when the Enemy Spawner controller script is disabled, and
    not between each test. The enemies from each test will accumulate on the scene.

    

    In
    the Enemy Spawner controller script, the Programmer should not implement the
    OnDestroy method to destroy all enemies that were created. The OnDestroy method
    will only be called when the Enemy Spawner controller game object is destroyed,
    and not between each test. The enemies from each test will accumulate on the
    scene.

    

    In the unit tests script, the Programmer should not implement
    a method to destroy all enemies that were created and mark it with the attribute
    [SetUp]. The method marked with the [SetUp] attribute on the unit tests script
    will be executed before each test is run. This will cause the spawned enemies
    from the last test executed to be left on the scene.'
