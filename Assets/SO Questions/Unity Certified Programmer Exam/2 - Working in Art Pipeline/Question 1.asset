%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 1
  m_EditorClassIdentifier: 
  question: 'A Programmer is working with a scene that contains hundreds of objects.
    The GPU performs slowly. The Programmer has created a GPU instancing-enabled
    material.


    What additional requirements must the scene objects meet for
    GPU Instancing to be an effective solution?'
  wrongAnswer1: They must be static batched and share materials.
  wrongAnswer2: They must have skinned meshes and unique materials.
  wrongAnswer3: They must have unique meshes and unique materials.
  correctAnswer: They must have identical meshes and share materials.
  showAnswer: 'The scene objects must have identical meshes and share materials to
    be an effective solution. GPU instancing is used to draw the same mesh multiple
    times in an efficient way, which reduces the number of draw calls.


    The
    scene objects do not need to have skinned meshes and unique materials to be an
    effective solution. GPU instancing does not support skinned meshes.


    The
    scene objects do not need to have unique meshes and unique materials to be an
    effective solution. GPU instancing requires the meshes and materials to be shared
    between the objects.


    The scene objects do not need to be static batched
    and to share materials to be an effective solution. GPU instancing is disabled
    on GameObjects that are statically batched.'
