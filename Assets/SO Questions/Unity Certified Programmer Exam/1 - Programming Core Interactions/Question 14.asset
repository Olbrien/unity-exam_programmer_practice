%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 14
  m_EditorClassIdentifier: 
  question: "A Programmer is working on a physics-based platformer that includes
    projectiles the player should avoid. All platforms have a PhysicMaterial attached
    to them named Platform. Refer to the exhibit for the settings of Platform.\r\n\r\nThe
    following code controls player input:\r\n\r\n    void FixedUpdate()\r\n     {\r\n        
    if (Input.GetKey(KeyCode.A))\r\n             MoveLeft();\r\n         if (Input.GetKey(KeyCode.D))\r\n            
    MoveRight();\r\n         if (Input.GetKeyDown(KeyCode.Space))\r\n            
    Jump();\r\n         if (Input.GetKey(KeyCode.S))\r\n             Duck();\r\n        
    if (Input.GetKeyDown(KeyCode.W))\r\n            Dodge();\r\n    }\r\n\r\nTesters
    have reported that the character does not always move as instructed and often
    fails jumps.\r\n\r\nWhat should the Programmer do to fix this?"
  wrongAnswer1: Refactor MoveLeft() and MoveRight() into a single method that uses
    Input.GetAxis("Horizontal").
  wrongAnswer2: Increase the Bounciness of Platform to 0.5.
  wrongAnswer3: Reduce the Dynamic Friction of Platform to 0.5.
  correctAnswer: Move the content of FixedUpdate() to Update().
  showAnswer: 'The Programmer should move the content of FixedUpdate() to Update()
    because Jump() and Dodge() are called using Input.GetKeyDown. GetKeyDown registers
    only on the frame in which the key is pressed, and FixedUpdate does not execute
    on every frame. Therefore, a player could press the key to jump or dodge, and
    the frame would update before FixedUpdate occurred to execute the command.


    The
    Programmer could refactor MoveLeft() and MoveRight() into a single method that
    uses Input.GetAxis("Horizontal"), and this is generally a good idea to generalize
    input schema. However, combining horizontal input will not prevent Input from
    resetting on Update() and out of sync with FixedUpdate(), and thus will not fix
    the issue reported by testers.


    The PhysicsMaterial of the platforms is
    in no way contributing to the issues reported by the players, and altering these
    values will not help. Decreasing the Dynamic Friction will only make the character
    slide more before coming to a stop. Increasing Bounciness will cause objects
    that collide with the platforms to potentially rebound upon impact.'
