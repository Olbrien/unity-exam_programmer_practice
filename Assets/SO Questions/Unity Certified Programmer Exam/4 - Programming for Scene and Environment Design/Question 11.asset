%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 11
  m_EditorClassIdentifier: 
  question: 'A Programmer is creating an AI that pursues an entity only when in line-of-sight
    of the entity. Otherwise, the AI returns to its original position.

    

    Which
    two NavMeshAgent members must this AI script access?'
  wrongAnswer1: speed and Raycast(Vector3, NavMeshHit).
  wrongAnswer2: Move(Vector3) and speed.
  wrongAnswer3: nextPosition and Move(Vector3).
  correctAnswer: Raycast(Vector3, NavMeshHit) and destination.
  showAnswer: 'The AI script must access destination. When destination is set, the
    agent moves to the navmesh position closest to the destination. Path calculation
    is done automatically.

    

    The AI script must also access Raycast(Vector3,
    NavMeshHit). Raycast() traces a ray toward a position (the Vector3 argument).
    If the ray hits an object along the way, the function returns true and also stores
    data about the hit object into NavMeshHit. This is used to detect the entity
    in line-of-sight.

    

    The AI script does not need to access Move(Vector3).
    NavMeshAgent.Move() is one way to move the agent by taking an argument that acts
    as its movement delta. This is similar to CharacterController.Move(). Because
    you want it to pursue a specific entity and because the agent will automatically
    move once a destination is set, this member does not need to be accessed.

    

    The
    AI script does not need to access nextPosition. The nextPosition member is the
    simulation position of the agent. Also, this member is tied to Transform.position
    in that they can be coupled to reflect the same values or decoupled to be independent
    of each other. This is not required because setting the destination automatically
    moves the agent to its target destination.

    

    The AI script does not
    need to access speed. The speed determines the maximum speed at which the agent
    can move. The agent automatically accelerates or brakes depending on the designed
    path segment, but it will never exceed this value.'
