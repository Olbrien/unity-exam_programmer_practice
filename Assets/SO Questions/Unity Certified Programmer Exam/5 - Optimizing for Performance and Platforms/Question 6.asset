%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 6
  m_EditorClassIdentifier: 
  question: 'A development team''s project grows too big to maintain at its current
    state. The team decides to move the art assets, which make up most of the project
    size, into AssetBundles. These AssetBundles will dynamically load into individual
    projects.

    

    What should the development team do to prevent regression?'
  wrongAnswer1: Select assets that have dependencies with other assets for bundling.
  wrongAnswer2: Bundle assets that share dependencies together into one AssetBundle.
  wrongAnswer3: Create assets compiled into many smaller bundles as opposed to few
    larger AssetBundles.
  correctAnswer: Compile assets with shared dependencies such as shared materials
    into a single AssetBundle.
  showAnswer: 'You should compile assets with shared dependencies such as shared
    materials into a single AssetBundle to prevent regression. The asset bundles
    are smaller. No memory is wasted due to multiple parents having separated copies
    of the same dependency in their bundles.

    

    You should not select assets
    that have dependencies with other assets for bundling to prevent regression.
    For each of the selected assets, you must also load their depended bundles.

    

    You
    should not create assets compiled into many smaller bundles as opposed to few
    larger AssetBundles to prevent regression. This increases the complexity of loading
    your AssetBundles as well as the build and loading time.

    

    You should
    not bundle assets that share dependencies together into one AssetBundle to prevent
    regression. Because some very basic assets are referenced in nearly every other
    AssetBundle, this would require you to group every asset into a single, large
    monolithic bundle.'
