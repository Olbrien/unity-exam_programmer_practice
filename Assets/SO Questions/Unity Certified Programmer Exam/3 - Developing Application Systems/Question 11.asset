%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 11
  m_EditorClassIdentifier: 
  question: 'A Programmer must create the camera setup to allow for a split screen
    view. The view must be split vertically to allow user 1 to view through CamA
    on the left, and user 2 to view through CamB on the right.

    

    What
    code is required to accomplish the task?'
  wrongAnswer1: 'camA.rect = new Rect(0, 0, Screen.width/2f, Screen.height);

    camB.rect
    = new Rect(Screen.width/2f, 0, Screen.width/2f, Screen.height);'
  wrongAnswer2: 'camA.rect = new Rect(0, 0, Screen.height, Screen.width/2f);

    camB.rect
    = new Rect(Screen.width/2f, 0, Screen.height, Screen.width/2f);'
  wrongAnswer3: 'camA.rect = new Rect(0, 0, 1, .5f);

    camB.rect = new Rect(0,
    .5f, 1, .5f);'
  correctAnswer: 'camA.rect = new Rect(0, 0, .5f, 1);

    camB.rect = new Rect(.5f,
    0, .5f, 1);'
  showAnswer: 'You should set up CamA and CamB as follows:

    

    camA.rect
    = new Rect(0,0,0.5f,1);

    camB.rect = new Rect(0.5,0,0.5f,1);

    

    The
    rect property in the Camera class specifies the screen render position of the
    camera in normalized coordinates. The rect property expects the parameters in
    the following order: normalized X screen position, normalized Y screen position,
    normalized screen width, normalized screen height. The normalized values in rect
    range from 0 (left/bottom) to 1 (right/top).

    

    You should not set
    up the cameras using the following code:

    

    camA.rect = new Rect(0,
    0, Screen.height, Screen.width/2f);

    camB.rect = new Rect(Screen.width/2f,
    0, Screen.height, Screen.width/2f);

    

    This is incorrect because the
    rect property in the Camera class requires you to specify the screen render position
    of the camera in normalized coordinates. The Screen.width and Screen.height properties
    return the values in absolute coordinates. Even if the width and height values
    were normalized, this code would be incorrect because the camera''s rect property
    expects the parameters in the order shown previously.

    

    You should
    not set up the cameras using the following code:

    

    camA.rect = new
    Rect(0, 0, 1, .5f);

    camB.rect = new Rect(0, .5f, 1, .5f);

    

    Even
    though this code uses normalized coordinates, it is incorrect because the order
    of parameters for the width and height of the camera is switched. The camera''s
    rect property expects the parameters in the order shown previously.

    

    You
    should not set up the cameras using the following code:

    

    camA.rect
    = new Rect(0, 0, Screen.width/2f, Screen.height);

    camB.rect = new Rect(Screen.width/2f,
    0, Screen.width/2f, Screen.height);

    

    The rect property in the Camera
    class requires you to specify the screen render position of the camera in normalized
    coordinates. The Screen.width and Screen.height properties return the values
    in absolute coordinates.'
