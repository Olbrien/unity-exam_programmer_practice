%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!114 &11400000
MonoBehaviour:
  m_ObjectHideFlags: 0
  m_CorrespondingSourceObject: {fileID: 0}
  m_PrefabInstance: {fileID: 0}
  m_PrefabAsset: {fileID: 0}
  m_GameObject: {fileID: 0}
  m_Enabled: 1
  m_EditorHideFlags: 0
  m_Script: {fileID: 11500000, guid: c91b368abd5b3b74b9ae42fb0874b63a, type: 3}
  m_Name: Question 12
  m_EditorClassIdentifier: 
  question: 'A Programmer is implementing a deer hunting game in which the player
    is the hunter and the deer move away from the hunter. The Programmer wants to
    implement a waypoint system to simulate deer movement. Waypoints are chosen from
    existing landmarks in the game dynamically where deer must decide their next
    waypoint based on safety levels.

    

    Which data structure should be
    used to implement this system?'
  wrongAnswer1: Tree
  wrongAnswer2: Grid
  wrongAnswer3: List
  correctAnswer: Graph
  showAnswer: 'You should use the graph data structure to implement this system.
    Because the deer only need to move to existing landmarks, you can specify the
    number of nodes and edges without redundancy. Additionally, you can add weight
    to the graph to represent safety levels.

    

    You should not use the
    grid data structure to implement this system. While grids are a viable structure
    commonly used in pathfinding, they are inefficient for this game because of the
    large amount of node data that will not be used (the deer only need to traverse
    between existing landmarks). Note that a grid is technically a graph as well.

    

    You
    should not use the list data structure to implement this system. A list is only
    a generic collection of objects that should be used in conjunction with other
    data structures to achieve a proper waypoint system. It would be difficult to
    iterate through waypoints based on safety levels with lists alone.

    

    You
    should not use the tree data structure to implement this system. The tree structure
    organizes data hierarchically, meaning there is an order in which the nodes are
    accessed. Since the landmarks need to be navigated based on safety levels, there
    is a disconnect between the tree hierarchy order and safety levels.'
